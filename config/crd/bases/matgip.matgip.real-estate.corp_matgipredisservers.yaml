---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: matgipredisservers.matgip.matgip.real-estate.corp
spec:
  group: matgip.matgip.real-estate.corp
  names:
    kind: MatgipRedisServer
    listKind: MatgipRedisServerList
    plural: matgipredisservers
    singular: matgipredisserver
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MatgipRedisServer is the Schema for the matgipredisservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MatgipRedisServerSpec defines the desired state of MatgipRedisServer
            properties:
              portNumber:
                description: The port number of redis server to expose
                format: int32
                type: integer
            type: object
          status:
            description: MatgipRedisServerStatus defines the observed state of MatgipRedisServer
            properties:
              inSync:
                description: Defines whether the resource has been provisioned on
                  the target system.
                type: boolean
              reconciled:
                description: Reconciled defines whether the host has been successfully
                  reconciled at least onece. If further changes are made they will
                  be ignored by the reconciler.
                type: boolean
            required:
            - inSync
            - reconciled
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
